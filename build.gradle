import org.jetbrains.kotlin.gradle.tasks.FatFrameworkTask

buildscript {
    def kotlin_version = '1.3.40'
    ext.ktor_version = '1.2.2'
    ext.kotlinx_serialization_version = '0.11.1'

    repositories {
        mavenLocal()
        google()
        maven { url 'https://dl.bintray.com/kotlin/ktor' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
        jcenter()
    }


    dependencies {
        classpath 'com.alecstrong:cocoapods-gradle-plugin:0.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.wiredforcode:gradle-spawn-plugin:0.8.2"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.40'
}

def ktor_version = '1.2.2'

repositories {
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
    jcenter()
}

group 'com.example'
version '0.0.1'

apply plugin: 'maven-publish'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.alecstrong.cocoapods'

kotlin {
    jvm()
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    targetForCocoapods('ios')
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation("io.ktor:ktor-client-core:$ktor_version")
                implementation("io.ktor:ktor-client-json:$ktor_version")
                implementation("io.ktor:ktor-client-gson:$ktor_version")
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$kotlinx_serialization_version"

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation "io.ktor:ktor-client-okhttp:$ktor_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx_serialization_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
            dependencies {
                implementation "io.ktor:ktor-client-ios:$ktor_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$kotlinx_serialization_version"
            }
        }
        iosTest {
        }
    }
}

//task iosTest {
//    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
//    group = JavaBasePlugin.VERIFICATION_GROUP
//    description = "Runs tests for target 'ios' on an iOS simulator"
//
//    doLast {
//        def binary = kotlin.targets.ios.binaries.getExecutable('test', 'DEBUG').outputFile
//        exec {
//            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
//        }
//    }
//}



configurations {
    compileClasspath
}